Concept of Method Overriding in Java:
Method overriding is a feature in Java that allows a subclass to provide a specific implementation of a method that is already defined in its superclass. The overridden method in the subclass should have the same name, return type, and parameters as the method in the superclass. Method overriding is used to achieve runtime polymorphism and to provide specific behavior in the subclass.

Key Concepts:
Same Method Signature:

The method in the subclass must have the same name, return type, and parameters as the method in the superclass.
Runtime Polymorphism:

Method overriding allows Java to determine which method to call at runtime based on the object's actual type, enabling dynamic method dispatch.
@Override Annotation:

The @Override annotation is used to indicate that a method is intended to override a method in the superclass. It helps to catch errors at compile time if the method does not correctly override a method in the superclass.




Relevant Interview Questions and Answers:
Q: What is method overriding in Java?

A: Method overriding in Java is a feature that allows a subclass to provide a specific implementation of a method that is already defined in its superclass. The overridden method must have the same name, return type, and parameters as the method in the superclass.
Q: What is the purpose of method overriding?

A: The purpose of method overriding is to achieve runtime polymorphism and to provide specific behavior in the subclass. It allows Java to determine which method to call at runtime based on the object's actual type.
Q: What is the @Override annotation used for?

A: The @Override annotation is used to indicate that a method is intended to override a method in the superclass. It helps to catch errors at compile time if the method does not correctly override a method in the superclass.
Q: Can you override a static method in Java?

A: No, static methods cannot be overridden in Java. Static methods belong to the class, not to any specific instance, and method overriding is based on instance methods.
Q: What is the difference between method overloading and method overriding?

A: Method overloading occurs when multiple methods in the same class have the same name but different parameters. Method overriding occurs when a subclass provides a specific implementation of a method that is already defined in its superclass.
Q: Can a subclass call the overridden method of its superclass?

A: Yes, a subclass can call the overridden method of its superclass using the super keyword. For example:
class B extends A {
    @Override
    public void show() {
        super.show(); // Calls the show method of class A
        System.out.println("in B show");
    }
}